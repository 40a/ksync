version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:latest
        environment:
          DEBUG: true

    working_directory: /go/src/github.com/vapor-ware/ksync

    environment:
        TEST_DIRECTORY: "gotest"
        BINARY_NAME: "ksync"

    steps:
      - checkout

      - restore_cache:
          keys:
            - vendor-{{ checksum "Gopkg.toml" }}-{{ checksum "Gopkg.lock" }}
            - vendor-{{ checksum "Gopkg.toml" }}

      - run:
          name: "Make test report directory"
          command: mkdir -p /tmp/$TEST_DIRECTORY

      - run:
          name: "Lint"
          command: |
            go get -u github.com/alecthomas/gometalinter
            gometalinter --install
            gometalinter ./... --vendor --disable=megacheck --deadline=240s
            gometalinter ./... --vendor --disable-all --enable=megacheck --deadline=240s

      - run:
          name: "Installing Vendored Dependencies"
          command: |
            go get -v github.com/golang/dep/cmd/dep
            go install github.com/golang/dep/cmd/dep
            dep ensure -v

      - run:
          name: "Get test to junit xml parser"
          command: go get -v -u github.com/jstemmer/go-junit-report

      - run:
          name: "Running Tests"
          command: |
            go test -v --race ./...
            go test -v ./... 2>&1 | go-junit-report > /tmp/$TEST_DIRECTORY/report.xml

      - save_cache:
          when: on_success
          key: vendor-{{ checksum "Gopkg.toml" }}-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor/

      - run:
          name: "Getting builder"
          command: |
            go get -v github.com/mitchellh/gox
            go get -v github.com/tcnksm/ghr

      - run:
          name: "Building"
          command: gox --parallel=10 --output="bin/{{ .Dir }}_{{ .OS }}_{{ .Arch }}" -os='!netbsd' ./cmd/...

      - store_artifacts:
          path: bin
          destination: binaries

      - store_test_results:
          path: /tmp/$TEST_DIRECTORY
